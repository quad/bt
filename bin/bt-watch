#!/usr/bin/env ruby

$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)

require 'bt'

include BT::Cli

opts = Trollop::options do
  banner <<-EOS
Watch a repository for stages to build

Usage:
\tbt watch [repository]
  EOS
  opt :debug, "Debugging text scrolls"
end

Grit.debug = true if opts[:debug]

uri = ARGV.shift || Dir.pwd

class Agent < Struct.new :io
  def self.start stage
    build = "#{stage.commit.sha}/#{stage.name}"

    IO.popen("#{find_command :agent} #{build}") do |io|
      yield new io
    end
  end

  def leading?
    begin
      io.readline
    rescue EOFError
      false
    end
  end
end

# TODO: Why does this BT:: reference need to be fully qualified?
BT::Repository.mirror(uri) do |r|
  while true
    r.update
    if stage = r.head.stages.select(&:ready?).shuffle.first
      Agent.start stage do |a|
        if a.leading?
          stage.build
          puts "#{stage.name}: #{stage.result} DONE"
          # TODO: r.push does all stages. So this error message is a lie.
          # Also, what about network failures and such?
          if a.leading?
            if r.push
              puts "#{stage.name}: #{stage.result} PUSHED"
            else
              puts "#{stage.name}: #{stage.result} IGNORE"
            end
          end
        end
      end
    end
  end
end
